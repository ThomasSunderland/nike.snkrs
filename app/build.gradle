/**
 * App-level build file.
 * @author Thomas Sunderland, 2021 MAY 09
 */
plugins {
    id "com.android.application"
    id "kotlin-android"
}

android {
    // compile SDK version = Android 11
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        // unique app identifier
        applicationId "com.nike.snkrs.sunderland"

        // min SDK version = Android 5 (Lollipop)
        minSdkVersion 21

        // target SDK version = Android 11
        targetSdkVersion 30

        // note: increment on each release
        versionCode 1

        // versioning scheme: major.year.month.hotfix
        versionName "1.21.5.0"

        // ui test runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        all {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }

        debug {
            debuggable true
        }

        release {
            debuggable false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError true

        // if true, check all issues, including those that are off by default
        checkAllWarnings true

        // if true, treat all warnings as errors
        warningsAsErrors true

        // if true, show all locations for an error, do not truncate lists, etc.
        showAll true

        // if true, generate an XML report for use by for example Jenkins
        xmlReport true

        // if true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true

        // optional path to report (default will be lint-results.html in the build directory)
        htmlOutput file("lint_report.html")

        // set to true to have all release builds run lint on issues with severity=fatal
        // and abort the build (controlled by abortOnError above) if fatal issues are found
        checkReleaseBuilds true
    }
}

dependencies {

    // androidX
    // Ref: https://developer.android.com/jetpack/androidx
    // Ref: https://developer.android.com/jetpack/androidx/versions
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "com.google.android.material:material:1.3.0"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    // kotlin
    // Ref: https://github.com/JetBrains/kotlin
    // Ref: https://kotlinlang.org/docs/home.html
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.0"

    // kotlin - coroutines
    // Ref: https://github.com/Kotlin/kotlinx.coroutines
    // Ref: https://kotlinlang.org/docs/coroutines-guide.html
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3"

    // retrofit (http client for restful api integration)
    // Ref: https://github.com/square/retrofit
    // Ref: https://square.github.io/retrofit/
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // testing
    // Ref: https://junit.org/junit4/
    // Ref: https://developer.android.com/training/testing/fundamentals
    // Ref: https://developer.android.com/training/testing/espresso
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
}